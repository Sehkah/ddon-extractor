plugins {
    // built-in plugins
    id 'java'
    id 'application'
    id 'jacoco'
    id 'project-report'
    // community plugins
    id 'org.beryx.jlink'
}

ext {
    orgApacheLoggingLog4jVersion = '2.20.0'
    infoPicocliVersion = '4.7.3'
}

dependencies {
    implementation project(':lib')

    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: "${orgApacheLoggingLog4jVersion}"
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    runtimeOnly group: 'org.apache.logging.log4j', name: 'log4j-core', version: "${orgApacheLoggingLog4jVersion}"
    // https://mvnrepository.com/artifact/info.picocli/picocli
    implementation group: 'info.picocli', name: 'picocli', version: "${infoPicocliVersion}"
}

tasks.distTar.enabled = false

application {
    applicationDefaultJvmArgs = ['-Dfile.encoding=UTF-8']
    mainModule = 'org.sehkah.ddon.tools.extractor.app'
    mainClass = 'org.sehkah.ddon.tools.extractor.cli.Main'
}

tasks.withType(Jar).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': application.mainClass
    }
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages', '--ignore-signing-information']
    launcher {
        name = rootProject.name
        jvmArgs = ['-Dfile.encoding=UTF-8']
    }
    jpackage {
        jvmArgs = ['-Dfile.encoding=UTF-8']
        skipInstaller = true
        imageOptions += ['--win-console']
        installerOptions += [
                '--vendor', 'Sehkah',
                '--app-version', version
        ]
        if (org.gradle.internal.os.OperatingSystem.current().windows) {
            installerOptions += [
                    '--win-per-user-install', '--win-dir-chooser', '--win-menu'
            ]
        }
    }
    forceMerge('jackson', 'log4j')
    mergedModule {
        additive = true
        uses 'com.fasterxml.jackson.databind.Module'
        uses 'org.apache.logging.log4j.util.PropertySource'
        uses 'org.apache.logging.log4j.core.util.ContextDataProvider'
        uses 'org.apache.logging.log4j.core.util.WatchEventService'
        uses 'org.apache.logging.log4j.spi.Provider'
        uses 'org.apache.logging.log4j.message.ThreadDumpMessage.ThreadInfoFactory'
    }
}
